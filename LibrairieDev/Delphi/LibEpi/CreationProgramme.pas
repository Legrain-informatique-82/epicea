Unit CreationProgramme;
{ Generated by OD TB CREATOR (c) 1997-99 O.DAHAN odahan@cybercable.fr
  On 17/02/2003 00:55:58 }

interface
uses SysUtils,Windows, Classes, Graphics, Forms, Controls,
     StdCtrls, DBTables, DB, ExtCtrls, Dialogs,LibSql;

procedure CreateTablesProg(DBALIAS0 : String);

// Callbacks
Type TPseudoEvent = Procedure(T:Ttable;TableNum:Integer;var WantAbort:Boolean);

Var  BeforeCreateCB,
     AfterCreateCB,
     ProgressCB : TPseudoEvent;

Const
//DBALIAS0 : String =  'Program';

// how much tables to create
TABLECOUNT = 1;

implementation

// dummy callback
var wantabort:boolean;
Procedure DummyCallback(T:TTable;TableNum:Integer;var WantAbort:Boolean);
Begin {nothing} end;

procedure CreateTablesProg(DBALIAS0 : String);
var
  table: TTable;
  Query:TQuery; //alter table GestDossier
                        //add DESIGNATION_DOSSIER VarChar(100);
  TblExists: Boolean;
  NewBase:TDataBase;
  Label
  TABLEno0, TABLEno1,TABLEno2,TABLEno3,TABLEno4, LBLEND,
  TABLEno0b, TABLEno1b,TABLEno2b,TABLEno3b,TABLEno4b;
//  LBLEND0b, LBLEND1b;

begin
Screen.Cursor := crHourGlass;
Try
//  showmessage('Init0_CP');
  NewBase:=TDataBase.Create(Application);
//  showmessage('Init1_CP');
  NewBase.DatabaseName:=DBALIAS0;
//  showmessage('Init6_CP');
    NewBase.Session.AddPassword('lepelet');
//  showmessage('Init2_CP');
  table := TTable.Create(Application);
//  showmessage('Init3_CP');
  table.DatabaseName :=NewBase.DatabaseName;
//  showmessage('Init4_CP');
  Query:=TQuery.Create(Application);
  Query.DatabaseName :=NewBase.DatabaseName;
  Query.SQL.Clear;
  Query.SQL.Add(' alter table GestDossier ');
  Query.SQL.Add(' add DESIGNATION_DOSSIER VarChar(100)');
  Try
  with table do
  begin

    { Creating : DBALIAS0 --> GestProg.db }
    TABLEno0: // for internal jump
    DataBaseName := DBALIAS0;
    TableName := 'GestProg.db';
    // is table already existing ?
    with FieldDefs do Clear;
    TblExists:=False;
//    try Open; TblExists:=true; except end; // exists. skip this table
    try Open; TblExists:=true; except TblExists:=FileExists(IncludeTrailingPathDelimiter(DBALIAS0)+TableName) end; // exists. skip this table
    active:=false;
    if TblExists then goto TABLEno1b;
    with FieldDefs do
    begin
      Clear;
      Add('ID', ftInteger, 0, False);
      Add('DateProg', ftDate, 0, False);
      Add('NumLicence', ftString, 50, False);
      Add('NomLicence', ftString, 50, False);
      Add('TypeLicence', ftString, 20, False);
      Add('NumVersion', ftString, 20, False);
      Add('NomUser', ftString, 50, False);
      Add('TypeVersion', ftString, 50, False);
      Add('Div', ftString, 250, False);
      Add('Div2', ftString, 250, False);
    end; { FieldDefs }
    with IndexDefs do
    begin
      Clear;
      Add('', 'ID', [ixPrimary, ixUnique]);
    end; { IndexDefs }
//  Before create event
    WantAbort := False;
    BeforeCreateCB(Table, 1, WantAbort);
    If WantAbort then Goto TABLEno1;

    Try If not TblExists then CreateTable; Except ShowMessage('Impossible de créer la table: GestProg.db'); End;
    try
     TableCreatePassWord(DBALIAS0,TableName,'lepelet');
    except
    end;

//  After create event
    WantAbort := False;
    AfterCreateCB(Table, 1, WantAbort);
    If WantAbort then Goto LBLEND;

//  Progress event
    WantAbort := False;
    ProgressCB(Table, 1, WantAbort);
    If WantAbort then Goto LBLEND;


    { Creating : DBALIAS0 --> MessageLGR.db }
    TABLEno1b:
    TABLEno1: // for internal jump
    DataBaseName := DBALIAS0;
    TableName := 'MessageLGR.db';
    // is table already existing ?
    with FieldDefs do Clear;
    TblExists:=False;
    try Open; TblExists:=true; except TblExists:=FileExists(IncludeTrailingPathDelimiter(DBALIAS0)+TableName) end; // exists. skip this table
    active:=false;
    if TblExists then goto TABLEno2b;
    with FieldDefs do
    begin
      Clear;
      Add('ID_Message', ftInteger, 0, False);
      Add('Ecran', ftString, 100, False);
      Add('Composant', ftString, 50, False);
      Add('Cle', ftString, 50, False);
      Add('MessageLGR', ftMemo, 0, False);
      Add('Titre', ftString, 255, False);
      Add('Afficher', ftBoolean, 0, false);
      Add('Divers', ftString, 255, False);
    end; { FieldDefs }
    with IndexDefs do
    begin
      Clear;
      Add('', 'ID_Message', [ixPrimary, ixUnique]);
      Add('EcranCompCle', 'Ecran;Composant;Cle', [ixDescending]);
    end; { IndexDefs }
//  Before create event
    WantAbort := False;
    BeforeCreateCB(Table, 2, WantAbort);
    If WantAbort then Goto TABLEno2;

    Try If not TblExists then CreateTable; Except ShowMessage('Impossible de créer la table: MessageLGR.db'); End;
    try
     TableCreatePassWord(DBALIAS0,TableName,'lepelet');
    except
    end;

//  After create event
    WantAbort := False;
    AfterCreateCB(Table, 2, WantAbort);
    If WantAbort then Goto LBLEND;

//  Progress event
    WantAbort := False;
    ProgressCB(Table, 2, WantAbort);
    If WantAbort then Goto LBLEND;

// rajout isa le 12/11/2008
////////////////////////////////

    { Creating : DBALIAS0 --> VERIFY.db }
    TABLEno2b:
    TABLEno2: // for internal jump
    DataBaseName := DBALIAS0;
    TableName := 'VERIFY.db';
    // is table already existing ?
    with FieldDefs do Clear;
    TblExists:=False;
    try Open; TblExists:=true; except TblExists:=FileExists(IncludeTrailingPathDelimiter(DBALIAS0)+TableName) end; // exists. skip this table
    active:=false;
    if TblExists then goto TABLEno3b;
    with FieldDefs do
    begin
      Clear;
      Add('Drive', ftString, 2, False);
      Add('Directory', ftString, 255, False);
      Add('Table Name', ftString, 255, False);
      Add('Extension', ftString, 4, False);
      Add('Error Code', ftSmallInt,0, False);
      Add('Error Level', ftSmallInt,0, False);
      Add('Error Message', ftString, 150, False);
      Add('Date', ftDate, 0, False);
      Add('Time', ftTime, 0, False);
    end; { FieldDefs }
    with IndexDefs do
    begin
      Clear;
    end; { IndexDefs }
//  Before create event
    WantAbort := False;
    BeforeCreateCB(Table, 3, WantAbort);
    If WantAbort then Goto TABLEno3;

    Try If not TblExists then CreateTable; Except ShowMessage('Impossible de créer la table: VERIFY.db'); End;
    try
     TableCreatePassWord(DBALIAS0,TableName,'');
    except
    end;

//  After create event
    WantAbort := False;
    AfterCreateCB(Table, 3, WantAbort);
    If WantAbort then Goto LBLEND;

//  Progress event
    WantAbort := False;
    ProgressCB(Table, 3, WantAbort);
    If WantAbort then Goto LBLEND;
 
//fin rajout isa le 12/11/2008
/////////////////////////////////


    { Creating : DBALIAS0 --> GestDossier.DB }
    TABLEno3b:
    TABLEno3: // for internal jump
    DataBaseName := DBALIAS0;
    TableName := 'GestDossier.DB';
    // is table already existing ?
    with FieldDefs do Clear;
//  showmessage('Init5_CP');
    TblExists:=False;
    close;
//  showmessage('Init7_CP');
//    try Open; TblExists:=true; except end; // exists. skip this table
    try Open; TblExists:=true; except TblExists:=FileExists(IncludeTrailingPathDelimiter(DBALIAS0)+TableName) end; // exists. skip this table
    if TblExists then
     begin
       try
        if FindField('DESIGNATION_DOSSIER') = nil then
           begin
            active:=false;
            Query.Open;
            Query.Close;
            Query.Free;
           end;
       except
       end;
     end;
//  showmessage('Init8_CP');
    active:=false;
//  showmessage('Init9_CP');
    if TblExists then goto TABLEno4b;
//  showmessage('Init10_CP');
    with FieldDefs do
    begin
      Clear;
      Add('ID_Dossier', ftInteger, 0, False);
      Add('ID_Table', ftInteger, 0, False);
      Add('Nom_Dossier', ftString, 255, False);
      Add('Dir_Dossier', ftString, 255, False);
      Add('Nom_Exo', ftString, 255, False);
      Add('Dir_Exo', ftString, 255, False);
      Add('Annee_Dossier', ftDateTime, 0, False);
      Add('DateUtil', ftDateTime, 0, False);
      Add('Cloture', ftBoolean, 0, False);
      Add('EXO_BASE', ftString, 2, False);
      Add('EXO_SAISIE', ftString, 2, False);
      Add('DATE_DEB_EXO', ftDate, 0, False);
      Add('DATE_FIN_EXO', ftDate, 0, False);
      Add('DESIGNATION_DOSSIER', ftString, 100, False);
    end; { FieldDefs }
    with IndexDefs do
    begin
      Clear;
      Add('', 'ID_Dossier;ID_Table', [ixPrimary, ixUnique]);
      Add('Date_Util', 'DateUtil;ID_Dossier', [ixDescending, ixCaseInsensitive]);
      Add('IdDosExo', 'ID_Dossier;ID_Table', [ixUnique, ixCaseInsensitive]);
    end; { IndexDefs }
//  Before create event
    WantAbort := False;
    BeforeCreateCB(Table, 4, WantAbort);
    If WantAbort then Goto LBLEND;

    Try If not TblExists then CreateTable; Except ShowMessage('Impossible de créer la table: GestDossier.DB'); End;
    try
     TableCreatePassWord(DBALIAS0,TableName,'lepelet');
    except
    end;


//  After create event
    WantAbort := False;
    AfterCreateCB(Table, 4, WantAbort);
    If WantAbort then Goto LBLEND;

//  Progress event
    WantAbort := False;
    ProgressCB(Table, 4, WantAbort);
    If WantAbort then Goto LBLEND;


  //////  **** rajout isa le 13/09/2010 **** //////////////////////////////////
  ////////////////////////////////////////////////////////////


    { Creating : DBALIAS0 --> GestVersion.DB }
    TABLEno4b:
//    TABLEno4: // for internal jump
//    DataBaseName := DBALIAS0;
//    TableName := 'GestVersion.DB';
//    with FieldDefs do Clear;
//    TblExists:=False;
//    close;
//    try Open; TblExists:=true; except TblExists:=FileExists(IncludeTrailingPathDelimiter(DBALIAS0)+TableName) end; // exists. skip this table
//
//    active:=false;
//
//    if TblExists then goto LBLEND;
//    with FieldDefs do
//    begin
//      Clear;
//      Add('ID', ftAutoInc, 0, False);
//      Add('Menu', ftString, 255, False);
//      Add('exclusion', ftString, 255, False);
//    end; { FieldDefs }
//    with IndexDefs do
//    begin
//      Clear;
//      Add('', 'ID;Menu', [ixPrimary, ixUnique]);
//      Add('MenuExclu', 'Menu;exclusion', [ixDescending, ixCaseInsensitive]);
//    end; { IndexDefs }
////  Before create event
//    WantAbort := False;
//    BeforeCreateCB(Table, 5, WantAbort);
//    If WantAbort then Goto LBLEND;
//
//    Try If not TblExists then CreateTable; Except ShowMessage('Impossible de créer la table: GestVersion.DB'); End;
//    try
//     TableCreatePassWord(DBALIAS0,TableName,'lepelet');
//    except
//    end;
//
//
////  After create event
//    WantAbort := False;
//    AfterCreateCB(Table, 5, WantAbort);
//    If WantAbort then Goto LBLEND;
//
////  Progress event
//    WantAbort := False;
//    ProgressCB(Table, 5, WantAbort);
//    If WantAbort then Goto LBLEND;

  end; { table }
//  LBLENDb:
  LBLEND:
  Finally
  table.Free;
  NewBase.free;
//  showmessage('Init_FIN_CP');
  end;
Finally
 Screen.Cursor:=crDefault;
// showmessage('Init_FIN2_CP');
end;
end;

INITIALIZATION
BeforeCreateCB := DummyCallBack;
AfterCreateCB  := DummyCallBack;
ProgressCB     := DummyCallBack;

end.
